# -*- coding: utf-8 -*-

import cv2
import numpy as np

"""
Show drawing methods of opencv
cv2.line, cv2.rectangle, cv2.circle, cv2.ellipse, cv2.polylines, cv2.putText
"""


class ImgDrawer(object):

    def set_empty_image(self):
        """
        Create a empty graph
        :return: img_src
        """

        shape = (512,512,3)
        return np.zeros(shape,np.uint8)

    def draw_line(self,img_src):
        """
        Draw a line
        :return: img_src
        """
        pt1 = (0, 0)
        pt2 = (100, 100)
        color = (255, 255, 0)
        cv2.line(img_src,pt1,pt2,color)
        return img_src

    def draw_rec(self,img_src):
        """
        Draw a rectangle
        :return: img_src
        """
        pt1 = (100,100)
        pt2 = (150,150)
        color = (255,255,0)
        cv2.rectangle(img_src,pt1,pt2,color)
        return img_src

    def draw_circle(self,img_src):
        """
        Draw a circle
        :return: img_src
        """
        center = (150,150)
        radius = 50
        color = (255,255,0)
        cv2.circle(img_src,center,radius,color)
        return img_src

    def draw_ellipse(self,img_src):
        """
        Draw a ellipse
        :return: img_src
        """
        center = (200,200)
        axes = (100,50)
        angle = 0
        start_angle = 0
        end_angle = 360
        color = (255,255,0)
        cv2.ellipse(img_src,center,axes,angle,start_angle,end_angle,color)
        return img_src

    def draw_polygon(self,img_src):
        """
        Draw a polygon
        reshape -1 present that this value is calculated by the rest
        :return: img_src
        """
        pts = np.array([[300, 300], [350, 350], [300, 340], [350, 360]], np.int32)
        pts = pts.reshape((-1, 1, 2))
        cv2.polylines(img_src,pts,isClosed=True,color=(255,255,0),thickness=5)
        return img_src

    def paint_words(self,img_src):
        """
        Paint words on img
        :param img_src
        :return: img_src
        """
        font = cv2.FONT_HERSHEY_SIMPLEX
        cv2.putText(img_src, 'OpenCV', (10, 500), font, 4, (255, 255, 0), 2)
        return img_src

    def main(self):
        img = self.set_empty_image()
        img = self.draw_line(img)
        img = self.draw_rec(img)
        img = self.draw_circle(img)
        img = self.draw_ellipse(img)
        img = self.draw_polygon(img)
        img = self.paint_words(img)

        cv2.imshow("img",img)
        cv2.waitKey(0)
        cv2.destroyAllWindows()


if __name__ == '__main__':
    id_helper = ImgDrawer()
    id_helper.main()
